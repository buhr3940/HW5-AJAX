For this assignment, I coded for all sections. But I ran out of time during testing to properly revise and fix pages. The most common problem for me is again syntax. I think I sometimes run into issues regarding cutting and pasting. For example, sometimes slanted single quotes are lost (as in the database file) and become normal single quotes. Keeping track of nested parentheses in logic statements and brackets are also troublesome. I got stuck on a strange and still unresolved issue regarding code in the searchresults.php.(see Github issue and email for details). The developer tools in Firefox did not call out a specific line of code but highlighted almost all of the searchresults.php page - not enough details to go off of. In this case a code validator or checker might help. I also spent alot of time on server /server setup issues and had trouble with creating and connecting to the database, depending on which verison of PHP you have, some methods others don't work (deprecated).

If I was to do this again for a boss that wants it done in two days, the first thing I'd do is ask for the IT manager's help to set up the server so I can spend more time on coding (and after that's done I'd take him or her out to lunch). I would probably utilize a better IDE or editor with improved syntax and error checking. And I would have built and completed the database section first (including creation and testing the database) before writing any code that manipulates it. It's confusing to jump back and forth from the MySQL file to php to JS, etc and it slows you down. I would also spend more time prior to coding focusing on overall design and algorithm (to hoepfully avoid starting from scratch again). Most importantly, I would do more incremental coding and testing to complete smaller, more manageable chunks of code more quickly and budget more time for testing as a % of total time since unexpected issues tend to crop up. 